cmake_minimum_required(VERSION 2.6)
project(fsim)

set(CMAKE_BUILD_TYPE Debug)
cmake_policy(SET CMP0015 NEW)

include_directories(../vb01)
include_directories(/usr/include/freetype2)
include_directories(/usr/include/GLFW)
include_directories(/usr/include/glm)
#include_directories(/usr/include/boost)
include_directories(/usr/include/sfml)
include_directories(/usr/include/mysql++)

link_directories(../vb01/build)
link_directories(/usr/lib)

set(core gameManager.cpp stateManager.cpp inputManager.cpp)
set(states abstractAppState.cpp guiAppState.cpp inGameAppState.cpp activeGameAppState.cpp jetAppState.cpp helicopterAppState.cpp)
set(gui button.cpp mainMenuButton.cpp exitButton.cpp optionsButton.cpp playButton.cpp okButton.cpp aircraftSelectionButton.cpp loadButton.cpp textbox.cpp listbox.cpp)
set(content map.cpp playerData.h structure.cpp building.cpp sam.cpp aircraft.cpp unit.cpp abstractRunway.cpp runway.cpp abstractHelipad.cpp helipad.cpp aircraftCarrier.cpp jet.cpp helicopter.cpp projectile.cpp bomb.cpp gpsBomb.cpp missile.cpp aiPilot.cpp fx.cpp)
set(utils defConfigs.h util.cpp)

add_executable(fsim main.cpp ${core} ${states} ${gui} ${content} ${utils})
target_link_libraries(fsim vb01)
target_link_libraries(fsim glfw)
target_link_libraries(fsim mysqlpp)
target_link_libraries(fsim sfml-system)
target_link_libraries(fsim sfml-audio)
#target_link_libraries(fsim boost_system)
#target_link_libraries(fsim boost_filesystem)
